---
title: "Mapa de delitos"
format: 
    html:
        df-print: kable
---


El último elemento que nos falta es el mapa de nuestro tablero de visualización. Para hacer el mapa vamos a usar el paquete [{leaflet}](https://rstudio.github.io/leaflet/), que es una interfase para la librería de Javascript de visualización geográfica [Leaflet](https://leafletjs.com/). Empezamos, como siempre, cargando los paquetes que vamos a usar



```{r}
#| output: false
library(tidyverse)
library(sf)
library(leaflet)
```


Y leyendo los datos, de la misma forma que en el [diagrama de dispersión](scatter_plot.qmd):


```{r}
base_mapa <- read_rds("01_input/Mapa_scatter_delitos_prioritarios.rds")
Encoding(base_mapa$subtipo_de_delito) <- "latin1"
Encoding(base_mapa$entidad) <- "latin1"
head(base_mapa)
```



Una vez más, tenemos que filtrar por tipo de delito y por fecha (recuerden que el tipo de delito lo va a determinar el usuario y la fecha la dejaremos fija)



```{r}
mapa_leaflet <- base_mapa %>% 
  filter(fecha==max(fecha)) %>% 
  filter(subtipo_de_delito=="Homicidio doloso")
mapa_leaflet
```


Ahora, para poder crear un mapa de coropletas, en el que los colores representen la cantidad de delitos, necesitamos una paleta de colores:


```{r}
pal <- colorNumeric("inferno",mapa_leaflet$Total,reverse = T,na.color = NA)
```


Ya con esto, crtear un mapa interactivo es muy fácil:


```{r}
leaflet() %>% 
  addProviderTiles(providers$OpenStreetMap) %>% 
  addPolygons(data=mapa_leaflet$geometry,
              fillColor = pal(mapa_leaflet$Total),
              color="black",
              weight = 1,
              opacity = 1,
              fillOpacity = .7,
              label = mapa_leaflet$NOMGEO,
              group = "Entidades")%>% 
  addLegend(pal = pal,values = mapa_leaflet$Total) %>% 
  addLayersControl(overlayGroups = "Entidades")
```

